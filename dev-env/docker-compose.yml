version: '3.8'

services:
  postgres:
    image: postgres:13
    container_name: insurance-postgres
    environment:
      POSTGRES_DB: insurance_db
      POSTGRES_USER: user
      POSTGRES_PASSWORD: pass
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U user -d insurance_db" ]
      interval: 5s
      timeout: 5s
      retries: 5
  kafka:
    image: confluentinc/cp-kafka:7.4.0
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    depends_on:
      - zookeeper
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
  kafdrop:
    image: obsidiandynamics/kafdrop
    ports: [ "9000:9000" ]
    environment:
      KAFKA_BROKERCONNECT: "kafka:9092"
  mock-fraud-api:
    image: mockserver/mockserver:latest
    ports:
      - "1080:1080"
    environment:
      MOCKSERVER_INITIALIZATION_JSON_PATH: /config/expectations.json
      MOCKSERVER_MOCK_INITIALIZATION_JSON: '
          {
            "httpRequest": {"method": "PUT", "path": "/mock/expectations"},
            "httpOverrideForwardedRequest": {
              "requestOverride": {
                "headers": {"Content-Type": ["application/json"]}
              },
              "responseModifier": {
                "headers": {"Content-Type": ["application/json"]}
              }
            }
          }'
    volumes:
      - ./mock-fraud-api/config:/config
volumes:
  postgres_data: